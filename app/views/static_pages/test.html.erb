<div id="placeForm">
    <form role="form">
        <div class="form-group geoForm">
          <label id="geoLabel">Where are you coming from?</label>
          <input id="address0" type="text" class="form-control" placeholder="Type a place or address">
        </div>

        <div class="form-group geoForm">
          <label id="geoLabel">Where are you going after? (optional)</label>
          <input id="address1" type="text" class="form-control" placeholder="Type a place or address">
        </div>
    </form>
    <div id="transitSelect">
        <label>How are you getting there?</label>
        <div id="transitButtons">
            <div class="transitButtonSpan">
                <input id="trasitCar" class="transitButton" type="radio" name="transitRadioOptions" value="car">
                <label class="radio-inline transitLabel">
                   Car
                </label>
            </div>
            <div class="transitButtonSpan">
                <input id="transitBike" class="transitButton" type="radio" name="transitRadioOptions"  value="bike">
                <label class="radio-inline transitLabel">
                   Bike
                </label>
            </div>
            <div class="transitButtonSpan">
                <input id="transitPublic" class="transitButton" type="radio" name="transitRadioOptions" value="transit">
                <label class="radio-inline transitLabel">
                   Transit
                </label>
            </div>
        </div>
    </div>
    <div id="typeSelect">
        <label>What are you looking for?</label>
        <div id="typeButtons">
            <div class="typeButtonSpan">
                <input id="typeBar" class="typeButton" type="radio" name="typeRadioOptions" value="bar">
                <label class="radio-inline typeLabel">
                   Bar
                </label>
            </div>
            <div class="typeButtonSpan">
                <input id="typeCoffee" class="typeButton" type="radio" name="typeRadioOptions" value="coffee">
                <label class="radio-inline typeLabel">
                   Coffee
                </label>
            </div>
        </div>
    </div>
    <button id="addField">+</button>
    <button id="deleteField">-</button>
    <button id="submit">Submit form</button>
</div>    
<div id="google-map" class="map_canvas"></div>
<% content_for :footer do %>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=createMap&key=AIzaSyANbDqy1kMhY2kcdRI-7wudb24t-tVdwd4"></script>
<script type="text/javascript">
    
    var inputFields = parseInt($('form input').size());
    var markers = [];
    
    var directionDisplay;
    
    var map;
    var origin = null;
    var destination = null;
    var waypoints = [];
    var markers = [];
    var directionsVisible = false;

    function calcRoute() {
        var directionsService = new google.maps.DirectionsService();
        alert("calcRoute is running")
        var mode;
       

        var request = {
            origin: origin,
            destination: destination,
            travelMode: google.maps.DirectionsTravelMode.WALKING
        };
        
        directionsService.route(request, function(response, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            // directionsDisplay.setDirections(response);
            alert("working!!")
            console.log(response)
            $("body").append(response.routes[0].legs[0].duration.text);
          }
        });
      }
    
    var createMap = function() {
        var geocoder = new google.maps.Geocoder();

        var input0 = /** @type {HTMLInputElement} */(document.getElementById('address0'));
        var autocomplete0 = new google.maps.places.Autocomplete(input0);

        var input1 = /** @type {HTMLInputElement} */(document.getElementById('address1'));
        var autocomplete1 = new google.maps.places.Autocomplete(input1);
        
        var points_lat = [];
        var points_lng = [];

        var myOptions = {
            center : new google.maps.LatLng(37.767612, -122.410971), //center to RTP
            zoom   : 12,
            zoomControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        },

        map = new google.maps.Map(document.getElementById("google-map"), myOptions);

        $("#submit").on("click", function() {
            var latlngbounds = new google.maps.LatLngBounds();
            setAllMap(null);
            markers.pop();
            var locationSize = 0;
            for (i=0; i<inputFields; i++) {
                
                var location = $("#address" + i).val();
                if (location != '' ){
                    locationSize += 1;
                    geocoder.geocode( {'address': location}, function(results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            var lat =results[0].geometry.location.lat()
                            points_lat.push(lat)
                            
                            var lng = results[0].geometry.location.lng() 
                            points_lng.push(lng)
                            map.setCenter(results[0].geometry.location);
                            var marker = new google.maps.Marker({
                                map: map,
                                position: results[0].geometry.location
                            });
                            markers.push(marker);
                            latlngbounds.extend(results[0].geometry.location);
                            if (locationSize==1){
                                map.setZoom(14);
                            } else{
                                map.fitBounds(latlngbounds);
                            }
                            if (points_lat.length==locationSize) {
                                var auth = {
                                  //
                                  // Update with your auth tokens.
                                  //
                                  consumerKey: "_unUkSmGSuH4Nh2uxxjilA",
                                  consumerSecret: "o0WCQ9yNzyr4-uwD6ADZTy8taTA",
                                  accessToken: "Lg_fv4Gt50WlYhLZDDzoIMGDPTyhFwpt",
                                  // This example is a proof of concept, for how to use the Yelp v2 API with javascript.
                                  // You wouldn't actually want to expose your access token secret like this in a real application.
                                  accessTokenSecret: "-QQ8o5A8omocq4rxruc4YW6jhHE",
                                  serviceProvider: {
                                    signatureMethod: "HMAC-SHA1"
                                  }
                                };
                                var terms = 'food';
                                var near = 'San+Francisco';
                                var sw_lat = points_lat[0]
                                var sw_lng = points_lng[1]
                                var ne_lat = points_lat[1]
                                var ne_lng = points_lng[0]

                                var bounds = sw_lat+','+sw_lng+'|'+ne_lat+','+ne_lng
                                var accessor = {
                                  consumerSecret: auth.consumerSecret,
                                  tokenSecret: auth.accessTokenSecret
                                };
                                parameters = [];
                                parameters.push(['term', terms]);
                                //parameters.push(['location', near]);
                                parameters.push(['bounds', bounds]);
                                parameters.push(['limit', '5']);
                                parameters.push(['callback', 'cb']);
                                parameters.push(['oauth_consumer_key', auth.consumerKey]);
                                parameters.push(['oauth_consumer_secret', auth.consumerSecret]);
                                parameters.push(['oauth_token', auth.accessToken]);
                                parameters.push(['oauth_signature_method', 'HMAC-SHA1']);
                                var message = {
                                  'action': 'http://api.yelp.com/v2/search',
                                  'method': 'GET',
                                  'parameters': parameters
                                };
                                OAuth.setTimestampAndNonce(message);
                                OAuth.SignatureMethod.sign(message, accessor);
                                var parameterMap = OAuth.getParameterMap(message.parameters);
                                parameterMap.oauth_signature = OAuth.percentEncode(parameterMap.oauth_signature)
                                console.log(parameterMap);
                                $.ajax({
                                  'url': message.action,
                                  'data': parameterMap,
                                  'cache': true,
                                  'dataType': 'jsonp',
                                  'jsonpCallback': 'cb',
                                  'success': function(data, textStats, XMLHttpRequest) {
                                    console.log(data);
                                    var output = prettyPrint(data);
                                    var destination_lat = data.businesses[0].location.coordinate.latitude;
                                    var destination_long = data.businesses[0].location.coordinate.longitude;
                                    destination = '('+destination_lat+','+destination_long+')';
                                    origin = '('+points_lat[0]+','+points_lng[0]+')';
                                    alert(destination);
                                    alert(origin);
                                    calcRoute();
                                  }
                                });
                            }
                        } else {
                            alert("Geocode was not successful for the following reason: " + status);
                        }
                    });
                }
            };
            
           
        });

        function setAllMap(map) {
            for (var i = 0; i < markers.length; i++) {
                
                markers[i].setMap(map);
            }
        }
    };

  </script>


<script type="text/javascript" src="http://oauth.googlecode.com/svn/code/javascript/oauth.js"></script>
<script type="text/javascript" src="http://oauth.googlecode.com/svn/code/javascript/sha1.js"></script>
<script type="text/javascript" src="https://raw.github.com/padolsey/prettyPrint.js/master/prettyprint.js"></script>

  


<% end %>